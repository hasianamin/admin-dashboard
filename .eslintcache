[{"D:\\Portfolio\\gadjian-app\\src\\index.js":"1","D:\\Portfolio\\gadjian-app\\src\\App.js":"2","D:\\Portfolio\\gadjian-app\\src\\reportWebVitals.js":"3","D:\\Portfolio\\gadjian-app\\src\\redux\\reducers\\index.jsx":"4","D:\\Portfolio\\gadjian-app\\src\\redux\\reducers\\InventoryReducers.jsx":"5","D:\\Portfolio\\gadjian-app\\src\\components\\Sidebar.jsx":"6","D:\\Portfolio\\gadjian-app\\src\\components\\Navbar.jsx":"7","D:\\Portfolio\\gadjian-app\\src\\pages\\Home.jsx":"8","D:\\Portfolio\\gadjian-app\\src\\components\\Card.jsx":"9","D:\\Portfolio\\gadjian-app\\src\\redux\\actions\\index.jsx":"10","D:\\Portfolio\\gadjian-app\\src\\redux\\actions\\InventoryActions.jsx":"11","D:\\Portfolio\\gadjian-app\\src\\helpers\\index.js":"12"},{"size":773,"mtime":1610456419978,"results":"13","hashOfConfig":"14"},{"size":1012,"mtime":1610511501099,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1606319612081,"results":"16","hashOfConfig":"14"},{"size":164,"mtime":1610456393321,"results":"17","hashOfConfig":"14"},{"size":258,"mtime":1610511546891,"results":"18","hashOfConfig":"14"},{"size":766,"mtime":1610461206362,"results":"19","hashOfConfig":"14"},{"size":1016,"mtime":1610469914555,"results":"20","hashOfConfig":"14"},{"size":5566,"mtime":1610533020778,"results":"21","hashOfConfig":"14"},{"size":1427,"mtime":1610531577505,"results":"22","hashOfConfig":"14"},{"size":34,"mtime":1610510189925,"results":"23","hashOfConfig":"14"},{"size":105,"mtime":1610510179408,"results":"24","hashOfConfig":"14"},{"size":347,"mtime":1610514953771,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1efoc73",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"D:\\Portfolio\\gadjian-app\\src\\index.js",[],["55","56"],"D:\\Portfolio\\gadjian-app\\src\\App.js",["57","58"],"import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Sidebar from './components/Sidebar';\nimport { API_URL } from './helpers';\nimport Home from './pages/Home';\nimport {InsertFunc} from './redux/actions'\n\nfunction App(props) {\n\n  const [data,setData] = useState(null)\n  \n  useEffect(()=>{\n    let checkStore = JSON.parse(localStorage.getItem('users'))\n    if(checkStore){\n      props.InsertFunc(checkStore)\n    } else{\n      axios.get(API_URL)\n      .then((res)=>{\n        setData(res.data.results)\n        localStorage.setItem('users',JSON.stringify(res.data.results))\n        props.InsertFunc(res.data.results)\n      }).catch((err)=>console.log(err))\n    }\n  },[])\n\n  return (\n    <div>\n      <Navbar/>\n      <Sidebar/>\n      <Home/>\n    </div>\n  );\n}\n\nconst ReduxProps=(state)=>{\n  return {\n    Inventory: state.Inventory\n  }\n}\n\nexport default connect(ReduxProps,{InsertFunc})(App);\n","D:\\Portfolio\\gadjian-app\\src\\reportWebVitals.js",[],"D:\\Portfolio\\gadjian-app\\src\\redux\\reducers\\index.jsx",[],"D:\\Portfolio\\gadjian-app\\src\\redux\\reducers\\InventoryReducers.jsx",["59"],"const INITIAL_STATE = {\r\n    people: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'INSERT':\r\n            return {...state, people: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","D:\\Portfolio\\gadjian-app\\src\\components\\Sidebar.jsx",[],"D:\\Portfolio\\gadjian-app\\src\\components\\Navbar.jsx",[],"D:\\Portfolio\\gadjian-app\\src\\pages\\Home.jsx",["60","61","62","63","64","65","66","67"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { connect } from 'react-redux';\r\nimport Card from '../components/Card';\r\n\r\nconst Home=(props)=>{\r\n\r\n    const [users,setUsers] = useState([])\r\n    const [params,setParams] = useState({\r\n        limit: 4,\r\n        offset: 0 \r\n    })\r\n    const [search,setSearch] = useState(null)\r\n    const [filterData,setFilterData] = useState(null)\r\n    // const head = useRef(null)\r\n\r\n    // const executeScroll = () => head.current.scrollIntoView()\r\n\r\n    useEffect(()=>{\r\n        setUsers(props.Inventory)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        renderCard(params.limit,params.offset)\r\n    },[params])\r\n\r\n    useEffect(()=>{\r\n        console.log(search)\r\n        getFilterData(search)\r\n    },[search])\r\n\r\n    useEffect(()=>{\r\n        console.log(filterData)\r\n        renderCard()\r\n    },[filterData])\r\n\r\n    const renderCard=(limit,offset)=>{\r\n        if(filterData){\r\n            return filterData.map((val,index)=>{\r\n                if(index >= offset && index < limit){\r\n                    return (\r\n                        <div className=\"home-contents\" key={index}>\r\n                            <Card data={val}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        } else {\r\n            let people = props.Inventory.people\r\n            return people.map((val,index)=>{\r\n                if(index >= offset && index < limit){\r\n                    return (\r\n                        <div className=\"home-contents\" key={index}>\r\n                            <Card data={val}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const modifyPage=(type)=>{\r\n        if(type) {\r\n            setParams({\r\n                limit: params.limit+4,\r\n                offset: params.offset+4\r\n            })\r\n        } else{\r\n            setParams({\r\n                limit: params.limit-4,\r\n                offset: params.offset-4\r\n            })\r\n        }\r\n        // executeScroll()\r\n    }\r\n\r\n    const getFilterData=async(param)=>{\r\n        if(param){\r\n            console.log(param)\r\n            let toLower = param.toLowerCase()\r\n            const regex = new RegExp(`${toLower}`)\r\n            let people = props.Inventory.people\r\n            let matches = await people.filter(value => {\r\n                if(regex.test(value.name.first.toLowerCase())){\r\n                    return value.name.first\r\n                }\r\n            })\r\n            setFilterData(matches)\r\n        } else {\r\n            setFilterData(null)\r\n        }\r\n    }\r\n\r\n    if(!users){\r\n        return <div>Loading</div>\r\n    }\r\n\r\n    return(\r\n        <div className='home'>\r\n            <div className=\"home-contents\">\r\n                <div className=\"home-content\">\r\n                    <p className='content-title'>Personnel List</p>\r\n                    <p className='sub-title'>List of all personnels</p>\r\n                </div>\r\n                <div className=\"home-content\">\r\n                    <div className=\"input-container\">\r\n                        <div className=\"icon\">\r\n                            <Icon.Search size={24}/>\r\n                        </div>\r\n                        <input className=\"input-field\" type=\"text\" placeholder=\"Find Personnels\" onChange={text => setSearch(text.target.value)}/>\r\n                    </div>\r\n                    <div className=\"btn btn-primary\">\r\n                        <p>Add Personnel</p>\r\n                        <Icon.Plus size={24}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-helper\">\r\n                {renderCard(params.limit,params.offset)}\r\n            </div>\r\n            <div className=\"footer-action\">\r\n                {\r\n                    params.offset === 0?\r\n                    <div className=\"footer-btn disable-btn\">\r\n                        <Icon.ChevronLeft size={24}/>\r\n                        <p>Previous Page</p>\r\n                    </div>\r\n                    :\r\n                    <div className=\"footer-btn\" onClick={()=>modifyPage(0)}>\r\n                        <Icon.ChevronLeft size={24}/>\r\n                        <p>Previous Page</p>\r\n                    </div>\r\n                }\r\n                {\r\n                    filterData?\r\n                        params.limit >= filterData.length?\r\n                        <div className=\"footer-btn disable-btn\">\r\n                            <p>Next Page</p>\r\n                            <Icon.ChevronRight size={24}/>\r\n                        </div>\r\n                        :\r\n                        <div className=\"footer-btn\" onClick={()=>modifyPage(1)}>\r\n                            <p>Next Page</p>\r\n                            <Icon.ChevronRight size={24}/>\r\n                        </div>\r\n                    :\r\n                    params.limit === 28?\r\n                    <div className=\"footer-btn disable-btn\">\r\n                        <p>Next Page</p>\r\n                        <Icon.ChevronRight size={24}/>\r\n                    </div>\r\n                    :\r\n                    <div className=\"footer-btn\" onClick={()=>modifyPage(1)}>\r\n                        <p>Next Page</p>\r\n                        <Icon.ChevronRight size={24}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ReduxProps=(state)=>{\r\n    return {\r\n        Inventory: state.Inventory\r\n    }\r\n}\r\n\r\nexport default connect(ReduxProps)(Home)","D:\\Portfolio\\gadjian-app\\src\\components\\Card.jsx",["68"],"import React, { useEffect } from 'react';\r\nimport * as Icon from 'react-bootstrap-icons'\r\nimport { CONVERT_DATE, SHORT_ID } from '../helpers';\r\n\r\nconst Card=(props)=>{\r\n    return(\r\n        <div className=\"card-container\">\r\n            <div className=\"card-header\">\r\n                <p>Personnel ID:<span> {SHORT_ID(props.data.login.uuid)}</span></p>\r\n                <div className=\"btn-action\">\r\n                    <Icon.ThreeDots size={24}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-img\">\r\n                        <img src={props.data.picture.large} alt={props.data.id.value}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    <div className=\"card-detail\">\r\n                        <p><b>Name</b></p>\r\n                        <p>{`${props.data.name.first} ${props.data.name.last}`}</p>\r\n                        <p><b>Telephone</b></p>\r\n                        <p>{props.data.cell}</p>\r\n                        <p><b>Birthday</b></p>\r\n                        <p>{CONVERT_DATE(props.data.dob.date)}</p>\r\n                        <p><b>Email</b></p>\r\n                        <p>{props.data.email}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","D:\\Portfolio\\gadjian-app\\src\\redux\\actions\\index.jsx",[],"D:\\Portfolio\\gadjian-app\\src\\redux\\actions\\InventoryActions.jsx",[],"D:\\Portfolio\\gadjian-app\\src\\helpers\\index.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":13,"column":10,"nodeType":"75","messageId":"76","endLine":13,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":27,"column":5,"nodeType":"79","endLine":27,"endColumn":7,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":5,"column":1,"nodeType":"83","endLine":12,"endColumn":2},{"ruleId":"73","severity":1,"message":"84","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":34},{"ruleId":"77","severity":1,"message":"85","line":21,"column":7,"nodeType":"79","endLine":21,"endColumn":9,"suggestions":"86"},{"ruleId":"77","severity":1,"message":"87","line":25,"column":7,"nodeType":"79","endLine":25,"endColumn":15,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":30,"column":7,"nodeType":"79","endLine":30,"endColumn":15,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"87","line":35,"column":7,"nodeType":"79","endLine":35,"endColumn":19,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":39,"column":46,"nodeType":"94","messageId":"95","endLine":39,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":50,"column":42,"nodeType":"94","messageId":"95","endLine":50,"endColumn":44},{"ruleId":"92","severity":1,"message":"96","line":83,"column":53,"nodeType":"94","messageId":"95","endLine":83,"endColumn":55},{"ruleId":"73","severity":1,"message":"97","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["100"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'props.Inventory'. Either include it or remove the dependency array. If 'setUsers' needs the current value of 'props.Inventory', you can also switch to useReducer instead of useState and read 'props.Inventory' in the reducer.",["101"],"React Hook useEffect has a missing dependency: 'renderCard'. Either include it or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'getFilterData'. Either include it or remove the dependency array.",["103"],["104"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.filter() expects a value to be returned at the end of arrow function.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [props]",{"range":"115","text":"116"},"Update the dependencies array to be: [props.Inventory]",{"range":"117","text":"118"},"Update the dependencies array to be: [params, renderCard]",{"range":"119","text":"120"},"Update the dependencies array to be: [getFilterData, search]",{"range":"121","text":"122"},"Update the dependencies array to be: [filterData, renderCard]",{"range":"123","text":"124"},[789,791],"[props]",[616,618],"[props.Inventory]",[698,706],"[params, renderCard]",[798,806],"[getFilterData, search]",[893,905],"[filterData, renderCard]"]